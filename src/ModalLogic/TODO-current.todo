- introduce post pruning (improve pre-pruning/post-pruning against a dataset and introduce validation/test set distinction)
- Lookahead: two levels
- Save confusion matrices... (be careful of random forests with their oob error...)
- Try running with: --compile=min -O0, and then with -O3
- Remove n_relations()?

- different frames with different ontologies: FingerMovements+add_dim e include_static_data!

- Highlight difference between channel_size and max_channel_size

Nota: save_datasets error with resumable ?

☐	Optimize: TODO add enumAccReprAggr for relationAll, and for all worldtypes and relations
☐	Ottimizza gli enumAccessibles e i enumAccessibles per i sets.
☐	remove ch_readWorld in favor of inst_readWorld. In general, remove all gamma infrastructure.

TODO Also try that map(aggr->aggr...)

In scanner.jl rimuovi i gammas, rimuovi test_operators cambia il modo di indicare le features e featsnops
- Rimuovere anche enumAccRepr.

Testa round_dataset_to_datatype/mapArrayToDataType in versione multiframe
Restore optimize_tree_parameters! optimizations

_split!: Also write test_condition this for OntologicalDataset and cross check
TODO add consistency_step_data and remove occurrences of "gamma"


computePropositionalThreshold, computeModalThreshold, test_decision seem to do similar things. Maybe uniform their style and naming

consistency checks down the dataset pipeline, modalDatasetIsConsistent_m,_g etc.


Create class for labeled datasets, and remove slice_mf_dataset.


( JULIA_EXCLUSIVE=1 julia -i -t30 scovid.jl -f 2>&1 | tee scan-covid-t30.out; JULIA_EXCLUSIVE=1 julia -i -t20 scovid.jl -f 2>&1 | tee scan-covid-t20.out; JULIA_EXCLUSIVE=1 julia -i -t16 scovid.jl -f 2>&1 | tee scan-covid-t16.out; JULIA_EXCLUSIVE=1 julia -i -t12 scovid.jl -f 2>&1 | tee scan-covid-t12.out; JULIA_EXCLUSIVE=1 julia -i -t8 scovid.jl -f 2>&1 | tee scan-covid-t8.out; JULIA_EXCLUSIVE=1 julia -i -t4 scovid.jl -f 2>&1 | tee scan-covid-t4.out ) &
